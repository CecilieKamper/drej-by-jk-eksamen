---
import Menylayout from "../komponenter/layouts/Menylayout.astro";
import Produkt from "../komponenter/Produkt.astro";
const data = await fetch(
  "https://uskcthmuobdstnsivsiv.supabase.co/rest/v1/drej",
  {
    method: "GET",
    headers: {
      apikey:
        "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVza2N0aG11b2Jkc3Ruc2l2c2l2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTU1OTAwMDgsImV4cCI6MjAzMTE2NjAwOH0.AaBaR388ZPdzoK-avsNriP8NkPbdx-uW7sGJwaw6aIA",
    },
  }
).then((res) => res.json());

console.log(data);
---

<Menylayout>
  <section class="grid_1">
    <div class="flex">
      <h1>Hvert produkt <br /> er <span class="skrå-orange">UNIKT</span></h1>
      <p>
        Alle produkter er unikke og er nummereret med et unikt nummer. Under
        hvert produkt kan du læse mere om hvor der stammer fra.
      </p>
    </div>
    <img class="skaal" src="/./drej-billeder/3-skaaaaale.png" alt="" />
  </section>
  <div class="soter-nav border">
    <h2>Sorter efter træsorter</h2>
    <div class="dropdown-soter">
      <!-- <div class="open-close">
        <img class="roter-open" src="/./drej-billeder/vpilsort.svg" alt="" />
        <img class="roter-close" src="/./drej-billeder/vpilsort.svg" alt="" />
      </div> -->
      <div class="open-close">
        <img  src="/./drej-billeder/open.svg" alt="" />
      </div>
      <!-- <div class="close-icon" id="close-icon">&times;</div> -->
      <div class="sorter-liste-c">
      <div class="sorter-liste">
        <div class="sorter-item" id="alt">
          <img src="drej-billeder/alle.svg" alt="Logo 1" />
          <p>alle</p>
        </div>
        <div class="sorter-item" id="ask">
          <img src="drej-billeder/ask-logo.svg" alt="Logo 1" />
          <p>ask</p>
        </div>
        <div class="sorter-item" id="valnød">
          <img src="drej-billeder/valnød-logo.svg" alt="Logo 1" />
          <p>valnød</p>
        </div>
        <div class="sorter-item" id="egeknude">
          <img src="drej-billeder/egeknude-logo.svg" alt="Logo 1" />
          <p>egeknude</p>
        </div>
        <div class="sorter-item" id="elm">
          <img src="drej-billeder/elm-logo.svg" alt="Logo 1" />
          <p>elm</p>
        </div>
      </div></div>
    </div>
  </div>
<!-- burgermenu sidder meget dråligt til mobil -->

<div id="alt" class="gridlol alt">
  {
    data.map((bowl) => {
      console.log(bowl);
      return <Produkt data={bowl} />;
    })
  }
</div>
<div id="ask" class="gridlol ask">
  {
    data.map((bowl) => {
      if (bowl.wood === "Ask") {
        console.log(bowl);
        return <Produkt data={bowl} />;
      }
    })
  }
</div>
<div id="valnød" class="gridlol valnød">
  
  {
    data.map((bowl) => {
      if (bowl.wood === "Valnød") {
        console.log(bowl);
        return <Produkt data={bowl} />;
      }
    })
  }
</div>
<div id="egeknude" class="gridlol egeknude">
  {
    data.map((bowl) => {
      if (bowl.wood === "Egeknude") {
        console.log(bowl);
        return <Produkt data={bowl} />;
      }
    })
  } 
</div>
<div id="elm" class="gridlol elm">
  {
    data.map((bowl) => {
      if (bowl.wood === "Elm") {
        console.log(bowl);
        return <Produkt data={bowl} />;
      }
    })
  }
</div>
<!-- er ret sikker på der ik skal være 2 ider  -->
  </Menylayout>


  <style>
    /* åben luk klasser til java */
.border{
  border-bottom: var(--border-2px);

}
    .show {
      display: block;
    }
    .sorter-liste-c {
      display: none;
    }
    /* .roter-open {
      rotate: 90deg;
      display: grid;
      place-items: center;
    } */
    .roter-close {
      rotate: -180deg;
      display: grid;
      place-items: center;
    }

    /* sorter menu mobil*/

    .sorter-liste {
      max-width: 400px;
  height: 400px;
      display: grid;
      grid-template-columns: 1fr 1fr;
   
    }
    .open-close {
      padding: 20px;
      display: grid;
      grid-template-columns: 1fr;
 
  
    }
    .sorter-item {
      /* padding: 10px;
      display: flex;
      flex-direction: column;
      justify-content: space-evenly;
      align-items: center; */
      display: grid;
      grid-template-columns: 1fr;
      
      transition: transform 0.3s;

      display: grid;
      place-items: center;
    }
    .sorter-item:hover {
      transform: scale(1.1);
    }

    .dropdown-soter{
      position: absolute;
      right: 10px;
      display: flex;
      flex-direction: column;
      align-items: flex-end;
      background-color: var(--baggrund);

    }
    .soter-nav{
      display: flex;
      flex-direction: column;
      padding: 10px 20px 10px 20px;
justify-content: center;  
    }
    h2{
      font-size: 2rem;
    }
    /* fordside */
    .flex {
      display: flex;
      flex-direction: column;
    }

    h1 {
      font-size: 3rem;
    }

    .grid_1 {
      display: grid;
      grid-template-columns: 1fr;
      padding: 30px;
      border-bottom: 2px solid var(--mørke-orange);
      img {
        max-width: 80%;
        height: auto;
        transition: transform 0.3s ease;
      }
    }

    /* idk */
    .grid_2 {
      padding: 10px;
      display: flex;
      align-items: center;
      justify-content: space-between;
      h2 {
        font-size: 1.5rem;
        font-style: normal;
      }
    }
    .gridlol {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 2px;
      background-color: var(--mørke-orange);
    }
/* føler ik det her grid virker i mobil og billederen er meget store  */
    .pil.stor {
      position: absolute;
      right: 10px;
      bottom: 10px;
    }

    .pil {
      position: absolute;
      right: 10px;
      bottom: 10px;

      transition: transform 0.3s ease; /* Transition for smooth scaling */
    }
    .pil:hover {
      transform: scale(1.2); /* Makes the pil 20% larger */
    }

    /* Responsivitet */
    @media (min-width: 800px) {
      /* nav sorter */
      .soter-nav {
        display: flex;
        justify-content: space-between;
        flex-direction: row;
      padding: 20px 20px 20px 20px;
        /* hvorfor går den ud over */
      }
      .sorter-liste {
        display: grid;
        grid-template-columns: 1fr 1fr 1fr 1fr 1fr;
        padding: 0px;
       max-width: auto; 
     height: auto;
      }
      .open-close {
        display: none;
      }
      .sorter-item {
        padding: 10px;
        display: flex;
        flex-direction: column;
        align-items: center;
        /* width: 80px;
        height: 60px; */
        transition: transform 0.3s;
      }
      /* øverst */
      .skaal:hover {
        transform: scale(1.1);
      }
      .grid_1 {
        display: grid;
        grid-template-columns: 1fr 1fr;
        justify-items: center;
        border-bottom: 3px solid var(--mørke-orange);

        h1 {
          padding-bottom: 30px;
        }
        .flex {
          justify-content: center;
          padding: 50px 0px 50px 100px;
        }
        img {
          max-width: 70%;
        }
      }

    /* produktlisten */
    .gridlol {
      display: grid;
      gap: 3px;
      grid-template-columns: repeat(4, minmax(250px, 1fr));
      grid-auto-flow: dense;
      
      border-bottom: 2px solid var(--mørke-orange); */
      grid-template-rows: repeat(6 1fr);
      background-color: var(--mørke-orange);
     
    } 
    .gridlol {
      div:first-child {
        grid-row: span 2;
        grid-column: span 2;
        .skål {
          width: 150%;
        }
      }

      div:nth-child(8) {
        grid-row: span 2;
        grid-column: span 2;
      }
   
    .gridlol > :nth-child(5) {
      grid-area: 2/4/3/5;
    } 
      }
      .grid_2 {
        border-bottom: 3px solid var(--mørke-orange);
      }

    }
  </style>
  <script>
    // document.addEventListener("DOMContentLoaded", function () {
    //   const menuIcon = document.getElementById("menu-icon");
    //   const closeIcon = document.getElementById("close-icon");
    //   const menu = document.getElementById("menu");

    //   menuIcon.addEventListener("click", function () {
    //     menu.style.display = "flex";
    //   });

    //   closeIcon.addEventListener("click", function () {
    //     menu.style.display = "none";
    //   });
    // });
    // document.addEventListener("DOMContentLoaded", () => {
    //   const openClose = document.querySelector(".open-close");
    //   const openIcon = document.querySelector(".roter-open");
    //   const closeIcon = document.querySelector(".roter-close");
    //   const sorterListe = document.querySelector(".sorter-liste");

    //   openClose.addEventListener("click", () => {

    //     const openClose = openClose.classList.toggle(".roter-close");
    
    //   });
    // });


      document.querySelectorAll(".sorter-item").forEach(elm=>{
        elm.addEventListener("click",klikFunction)

      })

      function klikFunction(evt){
          document.querySelectorAll(".gridlol").forEach(elm=>{
        elm.style.display = "none"

      })
          console.log("KLIK",evt.currentTarget.id)
          document.querySelector(`.${evt.currentTarget.id}`).style.display = "block";
      }
    document.addEventListener("DOMContentLoaded", () => {
  const openClose = document.querySelector(".open-close");
  const sorterListe = document.querySelector(".sorter-liste-c");

  openClose.addEventListener("click", () => {
    console.log("KLIK")
    // sorterListe.classList.toggle("show");
    if (sorterListe.style.display === "block"){
      sorterListe.style.display = "none"
    }else{

      sorterListe.style.display = "block"

    }
    
    openClose.classList.toggle("roter-close");
  });
  
});
// sorterliste skal åbne og lukke når man klikker på opencolse
// opencolse skal skifte icon når man klikker på den samtidig med at den åvner og lukker 
    // eventlisner der togler show
    // når man klikker på logo i conet der passer til den given map så skal den skifte detil den
    // eventlisner der togler roter clos ogsom skifter når den er lukket
  </script>
</div>
